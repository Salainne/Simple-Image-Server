<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Form1" xml:space="preserve">
    <value>Simple Image Server</value>
  </data>
  <data name="groupBox1" xml:space="preserve">
    <value>Server settings</value>
  </data>
  <data name="groupBox4" xml:space="preserve">
    <value>Log output</value>
  </data>
  <data name="groupBox3" xml:space="preserve">
    <value>Elements in list</value>
  </data>
  <data name="btnRemoveImage" xml:space="preserve">
    <value>Remove image</value>
  </data>
  <data name="btnAddToList" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="groupBox2" xml:space="preserve">
    <value>Lists</value>
  </data>
  <data name="btnDeleteSelectedList" xml:space="preserve">
    <value>Delete list</value>
  </data>
  <data name="btnMoveListDown" xml:space="preserve">
    <value>↓</value>
  </data>
  <data name="btnMoveListUp" xml:space="preserve">
    <value>↑</value>
  </data>
  <data name="grpListsettings" xml:space="preserve">
    <value>List settings</value>
  </data>
  <data name="label9" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="chkRandomImage" xml:space="preserve">
    <value>Deliver random image from list</value>
  </data>
  <data name="label8" xml:space="preserve">
    <value>Max width:</value>
  </data>
  <data name="label7" xml:space="preserve">
    <value>Processing settings:</value>
  </data>
  <data name="label6" xml:space="preserve">
    <value>Interval (seconds each list shows same image):</value>
  </data>
  <data name="label5" xml:space="preserve">
    <value>Listname:</value>
  </data>
  <data name="label4" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="label3" xml:space="preserve">
    <value>Active weekdays:</value>
  </data>
  <data name="label2" xml:space="preserve">
    <value>Active timeperiod:</value>
  </data>
  <data name="chkListTuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="chkListWednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="chkListThursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="chkListFriday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="chkListSaturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="chkListSunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="chkListMonday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="chkListActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="btnAddNewList" xml:space="preserve">
    <value>Add new list</value>
  </data>
  <data name="btnOpenSettingsfolder" xml:space="preserve">
    <value>Open settings folder</value>
  </data>
  <data name="DarkMode" xml:space="preserve">
    <value>Dark mode</value>
  </data>
  <data name="btnStartOnBoot" xml:space="preserve">
    <value>Enable autostart on boot</value>
  </data>
  <data name="chkAutostart" xml:space="preserve">
    <value>Autostart server (Will minimize to tray on start)</value>
  </data>
  <data name="label1" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="chkAllowremoteAccess" xml:space="preserve">
    <value>Allow remoteaccess</value>
  </data>
  <data name="btnServertoggle" xml:space="preserve">
    <value>Start Server</value>
  </data>
  <data name="statusStrip1" xml:space="preserve">
    <value>statusStrip1</value>
  </data>
  <data name="btnSaveSettingsNow" xml:space="preserve">
    <value>Save settings now</value>
  </data>
  <data name="StartServer" xml:space="preserve">
    <value>Start server</value>
  </data>
  <data name="ServerNotRunning" xml:space="preserve">
    <value>Server not running</value>
  </data>
  <data name="EnableAutostartOnBoot" xml:space="preserve">
    <value>Enable autostart on boot</value>
  </data>
  <data name="DisableAutostartOnBoot" xml:space="preserve">
    <value>Disable autostart on boot</value>
  </data>
  <data name="StopServer" xml:space="preserve">
    <value>Stop Server</value>
  </data>
  <data name="StartingServerOnPort" xml:space="preserve">
    <value>Starting server on port {0}</value>
  </data>
  <data name="ServerRunningOnPort" xml:space="preserve">
    <value>Server running on port {0}</value>
  </data>
  <data name="ErrorStartingServer" xml:space="preserve">
    <value>Error starting server {0}</value>
  </data>
  <data name="ClientDroppedConnection" xml:space="preserve">
    <value>Client dropped connection {0}</value>
  </data>
  <data name="NetworkError" xml:space="preserve">
    <value>Network error {0}</value>
  </data>
  <data name="ErrorHandlingRequest" xml:space="preserve">
    <value>Error handling request {0}</value>
  </data>
  <data name="ListNotFound" xml:space="preserve">
    <value>List not found</value>
  </data>
  <data name="EmptyList" xml:space="preserve">
    <value>Empty list</value>
  </data>
  <data name="EnterListName" xml:space="preserve">
    <value>Enter list name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SelectListFirst" xml:space="preserve">
    <value>Please select list first</value>
  </data>
  <data name="SelectImages" xml:space="preserve">
    <value>Select images to add to list</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value> (inactive)</value>
  </data>
  <data name="InactiveBecauseWeekday" xml:space="preserve">
    <value> (inactive because weekday)</value>
  </data>
  <data name="InactiveBecauseTimeOfDay" xml:space="preserve">
    <value> (inactive because time of day)</value>
  </data>
  <data name="SettingsFolderNotFound" xml:space="preserve">
    <value>Settings folder not found</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="SettingsfolderCouldNotBeOpened" xml:space="preserve">
    <value>Settings folder could not be opened</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ListContainsImagesWarning" xml:space="preserve">
    <value>This list has images in it. Are you sure you want to delete it?</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="btnDuplicateList" xml:space="preserve">
    <value>Duplicate list</value>
  </data>
  <data name="UpdateAvailable" xml:space="preserve">
    <value>Update available</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>Version {0} available</value>
  </data>
  <data name="CurrentVerionText" xml:space="preserve">
    <value>Current version {0}</value>
  </data>
  <data name="ClickToUpdateNow" xml:space="preserve">
    <value>Click to update now</value>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="NoNewVersionAvailable" xml:space="preserve">
    <value>No new version available</value>
  </data>
</root>