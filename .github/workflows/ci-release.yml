name: Build, Sign and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Locate MSBuild.exe
        id: locate_msbuild
        run: |
          $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          echo "MSBUILD_PATH=$vsPath" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Restore NuGet packages
        run: nuget restore "Simple image server/Simple image server.sln"
        shell: pwsh

      - name: Build with MSBuild (for .NET Framework 4.8)
        run: |
          & "$env:MSBUILD_PATH" "Simple image server/Simple image server.sln" /p:Configuration=Release /p:Platform="Any CPU"
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/Release/**

  release:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build

      - name: Generate updates.json
        run: |
            $tag = "${{ github.ref_name }}"
            $updatesJson = @"
            {
              "version": "$tag",
              "sources": [
                {
                  "type": "github",
                  "repo": "${{ github.repository }}",
                  "assetMatch": ".*\\.zip$"
                }
              ]
            }
            "@
            $updatesJson | Set-Content -Encoding UTF8 build/updates.json
        shell: pwsh


      # üßô‚Äç‚ôÇÔ∏è Genskab .pfx certifikat fra Secret
      - name: Recreate .pfx Certificate
        run: |
          echo "${{ secrets.SIGN_CERTIFICATE }}" | base64 -d > signing-cert.pfx
        shell: bash

      # üßô‚Äç‚ôÇÔ∏è Signer alle .exe og .dll
      - name: Sign binaries
        run: |
          $files = Get-ChildItem -Path build -Recurse -Include *.exe, *.dll
          foreach ($file in $files) {
            & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe" sign /f signing-cert.pfx /p "${{ secrets.SIGN_PASSWORD }}" /tr http://timestamp.digicert.com /td sha256 /fd sha256 "$($file.FullName)"
          }
        shell: pwsh

      - name: Create release zip
        run: |
          $tag = "${{ github.ref_name }}"
          mkdir temp
          Copy-Item -Path build/**/* -Destination temp/ -Recurse
          Remove-Item -Path temp/**/*.pdb -Force -ErrorAction SilentlyContinue
          Remove-Item -Path temp/**/*.xml -Force -ErrorAction SilentlyContinue
          Copy-Item -Path build/updates.json -Destination temp/updates.json
          Compress-Archive -Path temp\* -DestinationPath "SimpleImageServer-$tag.zip"
        shell: pwsh

      - name: Generate Release Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ""
          failOnError: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            SimpleImageServer-*.zip
          name: Release ${{ github.ref_name }}
          body: |
            üéâ This is the release for version ${{ github.ref_name }}!

            What's Changed:
            ${{ steps.changelog.outputs.changelog }}

            ---
            üõ°Ô∏è **Note:**  
            This build is automatically signed and timestamped.  
            Windows Defender warnings should no longer appear after trust propagation.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
